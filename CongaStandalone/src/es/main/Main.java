/*
 * generated by Xtext 2.23.0
 */
package es.main;

import com.google.inject.Inject;
import com.google.inject.Injector;
import com.google.inject.Provider;

import es.main.generators.DialogflowGenerator;
import generator.Bot;
import generator.GeneratorPackage;

import java.util.List;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.xtext.diagnostics.Severity;
import org.eclipse.xtext.util.CancelIndicator;
import org.eclipse.xtext.validation.CheckMode;
import org.eclipse.xtext.validation.IResourceValidator;
import org.eclipse.xtext.validation.Issue;
import org.xtext.botGenerator.BotStandaloneSetup;

public class Main {

	public static void main(String[] args) {
		if (args.length != 2) {
			System.err.println("Aborting: no path to EMF resource provided!");
			return;
		}
		Injector injector = new BotStandaloneSetup().createInjectorAndDoEMFRegistration();
		Main main = injector.getInstance(Main.class);
		main.runGenerator(args[0], args[1]);
	}

	@Inject
	private Provider<ResourceSet> resourceSetProvider;

	@Inject
	private IResourceValidator validator;

	protected void runGenerator(String string, String dest) {
		
		if (!EPackage.Registry.INSTANCE.containsKey(GeneratorPackage.eNS_URI)) {
			EPackage.Registry.INSTANCE.put(GeneratorPackage.eNS_URI, GeneratorPackage.eINSTANCE);
		}
		// Load the resource
		ResourceSet set = resourceSetProvider.get();
		Resource resource = set.getResource(URI.createFileURI(string), true);

		// Validate the resource
		List<Issue> list = validator.validate(resource, CheckMode.ALL, CancelIndicator.NullImpl);
		boolean error = false;
		if (!list.isEmpty()) {
			for (Issue issue : list) {
				if (issue.getSeverity() == Severity.ERROR) {
					error = true;
				}
				System.err.println(issue);
			}
			if (error) {
				return;
			}
		}else {
			System.out.println("Successful validation");
		}
		if (resource.getContents().get(0)==null) {
			return;
		}
		String fileName = resource.getURI().lastSegment();
		String botName =((Bot) resource.getContents().get(0)).getName();
		// Configure and start the generator
		DialogflowGenerator generator = new DialogflowGenerator(dest, fileName, botName);
		generator.doGenerate(resource); 

		System.out.println("Code generation finished.");
	}
}