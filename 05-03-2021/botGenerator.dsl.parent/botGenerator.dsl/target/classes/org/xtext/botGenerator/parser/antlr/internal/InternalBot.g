/*
 * generated by Xtext 2.23.0
 */
grammar InternalBot;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.botGenerator.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.botGenerator.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.botGenerator.services.BotGrammarAccess;

}

@parser::members {

 	private BotGrammarAccess grammarAccess;

    public InternalBotParser(TokenStream input, BotGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Bot";
   	}

   	@Override
   	protected BotGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleBot
entryRuleBot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBotRule()); }
	iv_ruleBot=ruleBot
	{ $current=$iv_ruleBot.current; }
	EOF;

// Rule Bot
ruleBot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Chatbot'
		{
			newLeafNode(otherlv_0, grammarAccess.getBotAccess().getChatbotKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBotAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBotRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='language'
		{
			newLeafNode(otherlv_2, grammarAccess.getBotAccess().getLanguageKeyword_2());
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getBotAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBotAccess().getLanguagesLanguageEnumRuleCall_4_0());
				}
				lv_languages_4_0=ruleLanguage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBotRule());
					}
					add(
						$current,
						"languages",
						lv_languages_4_0,
						"org.xtext.botGenerator.Bot.Language");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getBotAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBotAccess().getLanguagesLanguageEnumRuleCall_5_1_0());
					}
					lv_languages_6_0=ruleLanguage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBotRule());
						}
						add(
							$current,
							"languages",
							lv_languages_6_0,
							"org.xtext.botGenerator.Bot.Language");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='intents'
		{
			newLeafNode(otherlv_7, grammarAccess.getBotAccess().getIntentsKeyword_6());
		}
		otherlv_8=':'
		{
			newLeafNode(otherlv_8, grammarAccess.getBotAccess().getColonKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBotAccess().getIntentsIntentParserRuleCall_8_0());
				}
				lv_intents_9_0=ruleIntent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBotRule());
					}
					add(
						$current,
						"intents",
						lv_intents_9_0,
						"org.xtext.botGenerator.Bot.Intent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBotAccess().getIntentsIntentParserRuleCall_9_0());
				}
				lv_intents_10_0=ruleIntent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBotRule());
					}
					add(
						$current,
						"intents",
						lv_intents_10_0,
						"org.xtext.botGenerator.Bot.Intent");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_11='entities'
			{
				newLeafNode(otherlv_11, grammarAccess.getBotAccess().getEntitiesKeyword_10_0());
			}
			otherlv_12=':'
			{
				newLeafNode(otherlv_12, grammarAccess.getBotAccess().getColonKeyword_10_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBotAccess().getEntitiesEntityParserRuleCall_10_2_0());
					}
					lv_entities_13_0=ruleEntity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBotRule());
						}
						add(
							$current,
							"entities",
							lv_entities_13_0,
							"org.xtext.botGenerator.Bot.Entity");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBotAccess().getEntitiesEntityParserRuleCall_10_3_0());
					}
					lv_entities_14_0=ruleEntity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBotRule());
						}
						add(
							$current,
							"entities",
							lv_entities_14_0,
							"org.xtext.botGenerator.Bot.Entity");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_15='actions'
			{
				newLeafNode(otherlv_15, grammarAccess.getBotAccess().getActionsKeyword_11_0());
			}
			otherlv_16=':'
			{
				newLeafNode(otherlv_16, grammarAccess.getBotAccess().getColonKeyword_11_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBotAccess().getActionsActionParserRuleCall_11_2_0());
					}
					lv_actions_17_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBotRule());
						}
						add(
							$current,
							"actions",
							lv_actions_17_0,
							"org.xtext.botGenerator.Bot.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBotAccess().getActionsActionParserRuleCall_11_3_0());
					}
					lv_actions_18_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBotRule());
						}
						add(
							$current,
							"actions",
							lv_actions_18_0,
							"org.xtext.botGenerator.Bot.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_19='flows'
		{
			newLeafNode(otherlv_19, grammarAccess.getBotAccess().getFlowsKeyword_12());
		}
		otherlv_20=':'
		{
			newLeafNode(otherlv_20, grammarAccess.getBotAccess().getColonKeyword_13());
		}
		(
			otherlv_21='-'
			{
				newLeafNode(otherlv_21, grammarAccess.getBotAccess().getHyphenMinusKeyword_14_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBotAccess().getFlowsTransitionParserRuleCall_14_1_0());
					}
					lv_flows_22_0=ruleTransition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBotRule());
						}
						add(
							$current,
							"flows",
							lv_flows_22_0,
							"org.xtext.botGenerator.Bot.Transition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_23=';'
			{
				newLeafNode(otherlv_23, grammarAccess.getBotAccess().getSemicolonKeyword_14_2());
			}
		)+
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActionAccess().getTextParserRuleCall_0());
		}
		this_Text_0=ruleText
		{
			$current = $this_Text_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getHTTPRequestParserRuleCall_1());
		}
		this_HTTPRequest_1=ruleHTTPRequest
		{
			$current = $this_HTTPRequest_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getImageParserRuleCall_2());
		}
		this_Image_2=ruleImage
		{
			$current = $this_Image_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getHTTPResponseParserRuleCall_3());
		}
		this_HTTPResponse_3=ruleHTTPResponse
		{
			$current = $this_HTTPResponse_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleIntent
entryRuleIntent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntentRule()); }
	iv_ruleIntent=ruleIntent
	{ $current=$iv_ruleIntent.current; }
	EOF;

// Rule Intent
ruleIntent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIntentAccess().getIntent1ParserRuleCall_0());
		}
		this_Intent1_0=ruleIntent1
		{
			$current = $this_Intent1_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getIntentAccess().getIntent2ParserRuleCall_1());
		}
		this_Intent2_1=ruleIntent2
		{
			$current = $this_Intent2_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntent2
entryRuleIntent2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntent2Rule()); }
	iv_ruleIntent2=ruleIntent2
	{ $current=$iv_ruleIntent2.current; }
	EOF;

// Rule Intent2
ruleIntent2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIntent2Access().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntent2Rule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_fallbackIntent_1_0='Fallback'
				{
					newLeafNode(lv_fallbackIntent_1_0, grammarAccess.getIntent2Access().getFallbackIntentFallbackKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntent2Rule());
					}
					setWithLastConsumed($current, "fallbackIntent", lv_fallbackIntent_1_0 != null, "Fallback");
				}
			)
		)?
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getIntent2Access().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIntent2Access().getInputsIntentLanguageInputsParserRuleCall_3_0());
				}
				lv_inputs_3_0=ruleIntentLanguageInputs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntent2Rule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_3_0,
						"org.xtext.botGenerator.Bot.IntentLanguageInputs");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_4='parameters'
			{
				newLeafNode(otherlv_4, grammarAccess.getIntent2Access().getParametersKeyword_4_0());
			}
			otherlv_5=':'
			{
				newLeafNode(otherlv_5, grammarAccess.getIntent2Access().getColonKeyword_4_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getIntent2Access().getParametersParameter2ParserRuleCall_4_2_0_0());
						}
						lv_parameters_6_0=ruleParameter2
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIntent2Rule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_6_0,
								"org.xtext.botGenerator.Bot.Parameter2");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				(
					(
						{
							newCompositeNode(grammarAccess.getIntent2Access().getParametersParameterParserRuleCall_4_2_1_0());
						}
						lv_parameters_7_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIntent2Rule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_7_0,
								"org.xtext.botGenerator.Bot.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)+
		)?
	)
;

// Entry rule entryRuleIntent1
entryRuleIntent1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntent1Rule()); }
	iv_ruleIntent1=ruleIntent1
	{ $current=$iv_ruleIntent1.current; }
	EOF;

// Rule Intent1
ruleIntent1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIntent1Access().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntent1Rule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_fallbackIntent_1_0='Fallback'
				{
					newLeafNode(lv_fallbackIntent_1_0, grammarAccess.getIntent1Access().getFallbackIntentFallbackKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntent1Rule());
					}
					setWithLastConsumed($current, "fallbackIntent", lv_fallbackIntent_1_0 != null, "Fallback");
				}
			)
		)?
	)
;

// Entry rule entryRuleIntentLanguageInputs
entryRuleIntentLanguageInputs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntentLanguageInputsRule()); }
	iv_ruleIntentLanguageInputs=ruleIntentLanguageInputs
	{ $current=$iv_ruleIntentLanguageInputs.current; }
	EOF;

// Rule IntentLanguageInputs
ruleIntentLanguageInputs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='inputs'
		{
			newLeafNode(otherlv_0, grammarAccess.getIntentLanguageInputsAccess().getInputsKeyword_0());
		}
		(
			otherlv_1='in'
			{
				newLeafNode(otherlv_1, grammarAccess.getIntentLanguageInputsAccess().getInKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntentLanguageInputsAccess().getLanguageLanguageEnumRuleCall_1_1_0());
					}
					lv_language_2_0=ruleLanguage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntentLanguageInputsRule());
						}
						set(
							$current,
							"language",
							lv_language_2_0,
							"org.xtext.botGenerator.Bot.Language");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getIntentLanguageInputsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIntentLanguageInputsAccess().getInputsIntentInputParserRuleCall_3_0());
				}
				lv_inputs_4_0=ruleIntentInput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntentLanguageInputsRule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_4_0,
						"org.xtext.botGenerator.Bot.IntentInput");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getIntentLanguageInputsAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntentLanguageInputsAccess().getInputsIntentInputParserRuleCall_4_1_0());
					}
					lv_inputs_6_0=ruleIntentInput
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntentLanguageInputsRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_6_0,
							"org.xtext.botGenerator.Bot.IntentInput");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getIntentLanguageInputsAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	iv_ruleTransition=ruleTransition
	{ $current=$iv_ruleTransition.current; }
	EOF;

// Rule Transition
ruleTransition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='user'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransitionAccess().getUserKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getIntentIntentCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='=>'
			{
				newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getEqualsSignGreaterThanSignKeyword_2_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getTransitionAccess().getTargetStateParserRuleCall_2_1_0_0());
						}
						lv_target_3_1=ruleState
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTransitionRule());
							}
							set(
								$current,
								"target",
								lv_target_3_1,
								"org.xtext.botGenerator.Bot.State");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getTransitionAccess().getTargetState2ParserRuleCall_2_1_0_1());
						}
						lv_target_3_2=ruleState2
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTransitionRule());
							}
							set(
								$current,
								"target",
								lv_target_3_2,
								"org.xtext.botGenerator.Bot.State2");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='chatbot'
		{
			newLeafNode(otherlv_0, grammarAccess.getStateAccess().getChatbotKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getStateAccess().getActionsActionCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getStateAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStateRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getStateAccess().getActionsActionCrossReference_2_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_4='=>'
			{
				newLeafNode(otherlv_4, grammarAccess.getStateAccess().getEqualsSignGreaterThanSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStateAccess().getOutcomingTransitionParserRuleCall_3_1_0());
					}
					lv_outcoming_5_0=ruleTransition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStateRule());
						}
						add(
							$current,
							"outcoming",
							lv_outcoming_5_0,
							"org.xtext.botGenerator.Bot.Transition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleState2
entryRuleState2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getState2Rule()); }
	iv_ruleState2=ruleState2
	{ $current=$iv_ruleState2.current; }
	EOF;

// Rule State2
ruleState2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='chatbot'
		{
			newLeafNode(otherlv_0, grammarAccess.getState2Access().getChatbotKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getState2Rule());
					}
				}
				{
					newCompositeNode(grammarAccess.getState2Access().getActionsActionCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getState2Access().getCommaKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getState2Rule());
						}
					}
					{
						newCompositeNode(grammarAccess.getState2Access().getActionsActionCrossReference_2_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getState2Access().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_5='=>'
			{
				newLeafNode(otherlv_5, grammarAccess.getState2Access().getEqualsSignGreaterThanSignKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getState2Access().getOutcomingTransitionParserRuleCall_4_1_0());
					}
					lv_outcoming_6_0=ruleTransition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getState2Rule());
						}
						add(
							$current,
							"outcoming",
							lv_outcoming_6_0,
							"org.xtext.botGenerator.Bot.Transition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=';'
			{
				newLeafNode(otherlv_7, grammarAccess.getState2Access().getSemicolonKeyword_4_2());
			}
		)+
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getState2Access().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleIntentInput
entryRuleIntentInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntentInputRule()); }
	iv_ruleIntentInput=ruleIntentInput
	{ $current=$iv_ruleIntentInput.current; }
	EOF;

// Rule IntentInput
ruleIntentInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIntentInputAccess().getTrainingPhraseParserRuleCall_0());
		}
		this_TrainingPhrase_0=ruleTrainingPhrase
		{
			$current = $this_TrainingPhrase_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getIntentInputAccess().getRegexInputParserRuleCall_1());
		}
		this_RegexInput_1=ruleRegexInput
		{
			$current = $this_RegexInput_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTrainingPhrase
entryRuleTrainingPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrainingPhraseRule()); }
	iv_ruleTrainingPhrase=ruleTrainingPhrase
	{ $current=$iv_ruleTrainingPhrase.current; }
	EOF;

// Rule TrainingPhrase
ruleTrainingPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTrainingPhraseAccess().getTrainingPhraseAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTrainingPhraseAccess().getTokensLiteralParserRuleCall_1_0_0());
					}
					lv_tokens_1_1=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTrainingPhraseRule());
						}
						add(
							$current,
							"tokens",
							lv_tokens_1_1,
							"org.xtext.botGenerator.Bot.Literal");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getTrainingPhraseAccess().getTokensParameterRefenceTokenParserRuleCall_1_0_1());
					}
					lv_tokens_1_2=ruleParameterRefenceToken
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTrainingPhraseRule());
						}
						add(
							$current,
							"tokens",
							lv_tokens_1_2,
							"org.xtext.botGenerator.Bot.ParameterRefenceToken");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getColonKeyword_1());
		}
		otherlv_2='entity'
		{
			newLeafNode(otherlv_2, grammarAccess.getParameterAccess().getEntityKeyword_2());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParameterRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getParameterAccess().getEntityEntityCrossReference_3_0_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getDefaultEntityDefaultEntityEnumRuleCall_3_1_0());
					}
					lv_defaultEntity_4_0=ruleDefaultEntity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"defaultEntity",
							lv_defaultEntity_4_0,
							"org.xtext.botGenerator.Bot.DefaultEntity");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getParameterAccess().getCommaKeyword_4_0());
			}
			(
				(
					lv_isList_6_0='isList'
					{
						newLeafNode(lv_isList_6_0, grammarAccess.getParameterAccess().getIsListIsListKeyword_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParameterRule());
						}
						setWithLastConsumed($current, "isList", lv_isList_6_0 != null, "isList");
					}
				)
			)
		)?
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getParameterAccess().getCommaKeyword_5_0());
			}
			(
				(
					lv_required_8_0='required'
					{
						newLeafNode(lv_required_8_0, grammarAccess.getParameterAccess().getRequiredRequiredKeyword_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParameterRule());
						}
						setWithLastConsumed($current, "required", lv_required_8_0 != null, "required");
					}
				)
			)
		)?
		(
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getParameterAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getPromptsPromptLanguageParserRuleCall_6_1_0());
					}
					lv_prompts_10_0=rulePromptLanguage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						add(
							$current,
							"prompts",
							lv_prompts_10_0,
							"org.xtext.botGenerator.Bot.PromptLanguage");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getParameterAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleParameter2
entryRuleParameter2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameter2Rule()); }
	iv_ruleParameter2=ruleParameter2
	{ $current=$iv_ruleParameter2.current; }
	EOF;

// Rule Parameter2
ruleParameter2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameter2Access().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameter2Rule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getParameter2Access().getCommaKeyword_1());
		}
	)
;

// Entry rule entryRulePromptLanguage
entryRulePromptLanguage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPromptLanguageRule()); }
	iv_rulePromptLanguage=rulePromptLanguage
	{ $current=$iv_rulePromptLanguage.current; }
	EOF;

// Rule PromptLanguage
rulePromptLanguage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='prompts'
		{
			newLeafNode(otherlv_0, grammarAccess.getPromptLanguageAccess().getPromptsKeyword_0());
		}
		(
			otherlv_1='in'
			{
				newLeafNode(otherlv_1, grammarAccess.getPromptLanguageAccess().getInKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPromptLanguageAccess().getLanguageLanguageEnumRuleCall_1_1_0());
					}
					lv_language_2_0=ruleLanguage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPromptLanguageRule());
						}
						set(
							$current,
							"language",
							lv_language_2_0,
							"org.xtext.botGenerator.Bot.Language");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getPromptLanguageAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPromptLanguageAccess().getPromptsEStringParserRuleCall_3_0());
				}
				lv_prompts_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPromptLanguageRule());
					}
					add(
						$current,
						"prompts",
						lv_prompts_4_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getPromptLanguageAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPromptLanguageAccess().getPromptsEStringParserRuleCall_4_1_0());
					}
					lv_prompts_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPromptLanguageRule());
						}
						add(
							$current,
							"prompts",
							lv_prompts_6_0,
							"org.xtext.botGenerator.Bot.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7=']'
		{
			newLeafNode(otherlv_7, grammarAccess.getPromptLanguageAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getLiteralAccess().getTextEStringParserRuleCall_0());
			}
			lv_text_0_0=ruleEString
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getLiteralRule());
				}
				set(
					$current,
					"text",
					lv_text_0_0,
					"org.xtext.botGenerator.Bot.EString");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEntityToken
entryRuleEntityToken returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityTokenRule()); }
	iv_ruleEntityToken=ruleEntityToken
	{ $current=$iv_ruleEntityToken.current; }
	EOF;

// Rule EntityToken
ruleEntityToken returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityTokenAccess().getCommercialAtKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityTokenRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEntityTokenAccess().getEntityEntityCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParameterToken
entryRuleParameterToken returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterTokenRule()); }
	iv_ruleParameterToken=ruleParameterToken
	{ $current=$iv_ruleParameterToken.current; }
	EOF;

// Rule ParameterToken
ruleParameterToken returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getParameterTokenAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterTokenRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getParameterTokenAccess().getParameterParameterCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getParameterTokenAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleParameterRefenceToken
entryRuleParameterRefenceToken returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRefenceTokenRule()); }
	iv_ruleParameterRefenceToken=ruleParameterRefenceToken
	{ $current=$iv_ruleParameterRefenceToken.current; }
	EOF;

// Rule ParameterRefenceToken
ruleParameterRefenceToken returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getParameterRefenceTokenAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterRefenceTokenAccess().getTextReferenceEStringParserRuleCall_1_0());
				}
				lv_textReference_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRefenceTokenRule());
					}
					set(
						$current,
						"textReference",
						lv_textReference_1_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getParameterRefenceTokenAccess().getRightParenthesisKeyword_2());
		}
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getParameterRefenceTokenAccess().getLeftSquareBracketKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRefenceTokenRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getParameterRefenceTokenAccess().getParameterParameterCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getParameterRefenceTokenAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleHTTPRequestToken
entryRuleHTTPRequestToken returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHTTPRequestTokenRule()); }
	iv_ruleHTTPRequestToken=ruleHTTPRequestToken
	{ $current=$iv_ruleHTTPRequestToken.current; }
	EOF;

// Rule HTTPRequestToken
ruleHTTPRequestToken returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='request.'
		{
			newLeafNode(otherlv_0, grammarAccess.getHTTPRequestTokenAccess().getRequestKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHTTPRequestTokenAccess().getTypeHTTPReturnTypeEnumRuleCall_1_0());
				}
				lv_type_1_0=ruleHTTPReturnType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHTTPRequestTokenRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.botGenerator.Bot.HTTPReturnType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='.'
			{
				newLeafNode(otherlv_2, grammarAccess.getHTTPRequestTokenAccess().getFullStopKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHTTPRequestTokenAccess().getDataKeyEStringParserRuleCall_2_1_0());
					}
					lv_dataKey_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHTTPRequestTokenRule());
						}
						set(
							$current,
							"dataKey",
							lv_dataKey_3_0,
							"org.xtext.botGenerator.Bot.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEntityAccess().getSimpleEntityParserRuleCall_0());
		}
		this_SimpleEntity_0=ruleSimpleEntity
		{
			$current = $this_SimpleEntity_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityAccess().getComplexEntityParserRuleCall_1());
		}
		this_ComplexEntity_1=ruleComplexEntity
		{
			$current = $this_ComplexEntity_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityAccess().getRegexEntityParserRuleCall_2());
		}
		this_RegexEntity_2=ruleRegexEntity
		{
			$current = $this_RegexEntity_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleEntity
entryRuleSimpleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleEntityRule()); }
	iv_ruleSimpleEntity=ruleSimpleEntity
	{ $current=$iv_ruleSimpleEntity.current; }
	EOF;

// Rule SimpleEntity
ruleSimpleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Simple'
		{
			newLeafNode(otherlv_0, grammarAccess.getSimpleEntityAccess().getSimpleKeyword_0());
		}
		otherlv_1='entity'
		{
			newLeafNode(otherlv_1, grammarAccess.getSimpleEntityAccess().getEntityKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleEntityAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleEntityRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getSimpleEntityAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleEntityAccess().getInputsSLanguageInputParserRuleCall_4_0());
				}
				lv_inputs_4_0=ruleSLanguageInput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleEntityRule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_4_0,
						"org.xtext.botGenerator.Bot.SLanguageInput");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleComplexEntity
entryRuleComplexEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplexEntityRule()); }
	iv_ruleComplexEntity=ruleComplexEntity
	{ $current=$iv_ruleComplexEntity.current; }
	EOF;

// Rule ComplexEntity
ruleComplexEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Composite'
		{
			newLeafNode(otherlv_0, grammarAccess.getComplexEntityAccess().getCompositeKeyword_0());
		}
		otherlv_1='entity'
		{
			newLeafNode(otherlv_1, grammarAccess.getComplexEntityAccess().getEntityKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComplexEntityAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComplexEntityRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getComplexEntityAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComplexEntityAccess().getInputsCLanguageInputParserRuleCall_4_0());
				}
				lv_inputs_4_0=ruleCLanguageInput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComplexEntityRule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_4_0,
						"org.xtext.botGenerator.Bot.CLanguageInput");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleRegexEntity
entryRuleRegexEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegexEntityRule()); }
	iv_ruleRegexEntity=ruleRegexEntity
	{ $current=$iv_ruleRegexEntity.current; }
	EOF;

// Rule RegexEntity
ruleRegexEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Regex'
		{
			newLeafNode(otherlv_0, grammarAccess.getRegexEntityAccess().getRegexKeyword_0());
		}
		otherlv_1='entity'
		{
			newLeafNode(otherlv_1, grammarAccess.getRegexEntityAccess().getEntityKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRegexEntityAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegexEntityRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getRegexEntityAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRegexEntityAccess().getInputsRLanguageInputParserRuleCall_4_0());
				}
				lv_inputs_4_0=ruleRLanguageInput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegexEntityRule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_4_0,
						"org.xtext.botGenerator.Bot.RLanguageInput");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleSLanguageInput
entryRuleSLanguageInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSLanguageInputRule()); }
	iv_ruleSLanguageInput=ruleSLanguageInput
	{ $current=$iv_ruleSLanguageInput.current; }
	EOF;

// Rule SLanguageInput
ruleSLanguageInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='inputs'
			{
				newLeafNode(otherlv_0, grammarAccess.getSLanguageInputAccess().getInputsKeyword_0_0());
			}
			otherlv_1='in'
			{
				newLeafNode(otherlv_1, grammarAccess.getSLanguageInputAccess().getInKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSLanguageInputAccess().getLanguageLanguageEnumRuleCall_0_2_0());
					}
					lv_language_2_0=ruleLanguage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSLanguageInputRule());
						}
						set(
							$current,
							"language",
							lv_language_2_0,
							"org.xtext.botGenerator.Bot.Language");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSLanguageInputAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSLanguageInputAccess().getInputsSimpleInputParserRuleCall_2_0_0());
					}
					lv_inputs_4_0=ruleSimpleInput
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSLanguageInputRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_4_0,
							"org.xtext.botGenerator.Bot.SimpleInput");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSLanguageInputAccess().getInputsSimpleInputParserRuleCall_2_1_0());
					}
					lv_inputs_5_0=ruleSimpleInput
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSLanguageInputRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_5_0,
							"org.xtext.botGenerator.Bot.SimpleInput");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getSLanguageInputAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleCLanguageInput
entryRuleCLanguageInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCLanguageInputRule()); }
	iv_ruleCLanguageInput=ruleCLanguageInput
	{ $current=$iv_ruleCLanguageInput.current; }
	EOF;

// Rule CLanguageInput
ruleCLanguageInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='inputs'
			{
				newLeafNode(otherlv_0, grammarAccess.getCLanguageInputAccess().getInputsKeyword_0_0());
			}
			otherlv_1='in'
			{
				newLeafNode(otherlv_1, grammarAccess.getCLanguageInputAccess().getInKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCLanguageInputAccess().getLanguageLanguageEnumRuleCall_0_2_0());
					}
					lv_language_2_0=ruleLanguage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCLanguageInputRule());
						}
						set(
							$current,
							"language",
							lv_language_2_0,
							"org.xtext.botGenerator.Bot.Language");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getCLanguageInputAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCLanguageInputAccess().getInputsCompositeInputParserRuleCall_2_0_0());
					}
					lv_inputs_4_0=ruleCompositeInput
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCLanguageInputRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_4_0,
							"org.xtext.botGenerator.Bot.CompositeInput");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCLanguageInputAccess().getInputsCompositeInputParserRuleCall_2_1_0());
					}
					lv_inputs_5_0=ruleCompositeInput
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCLanguageInputRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_5_0,
							"org.xtext.botGenerator.Bot.CompositeInput");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getCLanguageInputAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleRLanguageInput
entryRuleRLanguageInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRLanguageInputRule()); }
	iv_ruleRLanguageInput=ruleRLanguageInput
	{ $current=$iv_ruleRLanguageInput.current; }
	EOF;

// Rule RLanguageInput
ruleRLanguageInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='inputs'
			{
				newLeafNode(otherlv_0, grammarAccess.getRLanguageInputAccess().getInputsKeyword_0_0());
			}
			otherlv_1='in'
			{
				newLeafNode(otherlv_1, grammarAccess.getRLanguageInputAccess().getInKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRLanguageInputAccess().getLanguageLanguageEnumRuleCall_0_2_0());
					}
					lv_language_2_0=ruleLanguage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRLanguageInputRule());
						}
						set(
							$current,
							"language",
							lv_language_2_0,
							"org.xtext.botGenerator.Bot.Language");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getRLanguageInputAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRLanguageInputAccess().getInputsRegexInputParserRuleCall_2_0_0());
					}
					lv_inputs_4_0=ruleRegexInput
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRLanguageInputRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_4_0,
							"org.xtext.botGenerator.Bot.RegexInput");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRLanguageInputAccess().getInputsRegexInputParserRuleCall_2_1_0());
					}
					lv_inputs_5_0=ruleRegexInput
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRLanguageInputRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_5_0,
							"org.xtext.botGenerator.Bot.RegexInput");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getRLanguageInputAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleRegexInput
entryRuleRegexInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegexInputRule()); }
	iv_ruleRegexInput=ruleRegexInput
	{ $current=$iv_ruleRegexInput.current; }
	EOF;

// Rule RegexInput
ruleRegexInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRegexInputAccess().getRegexInputAction_0(),
					$current);
			}
		)
		otherlv_1='pattern'
		{
			newLeafNode(otherlv_1, grammarAccess.getRegexInputAccess().getPatternKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getRegexInputAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRegexInputAccess().getExpresionEStringParserRuleCall_3_0());
				}
				lv_expresion_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegexInputRule());
					}
					set(
						$current,
						"expresion",
						lv_expresion_3_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCompositeInput
entryRuleCompositeInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositeInputRule()); }
	iv_ruleCompositeInput=ruleCompositeInput
	{ $current=$iv_ruleCompositeInput.current; }
	EOF;

// Rule CompositeInput
ruleCompositeInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCompositeInputAccess().getCompositeInputAction_0(),
					$current);
			}
		)
		otherlv_1='composite'
		{
			newLeafNode(otherlv_1, grammarAccess.getCompositeInputAccess().getCompositeKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getCompositeInputAccess().getColonKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositeInputAccess().getExpresionLiteralParserRuleCall_3_0_0());
					}
					lv_expresion_3_1=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositeInputRule());
						}
						add(
							$current,
							"expresion",
							lv_expresion_3_1,
							"org.xtext.botGenerator.Bot.Literal");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCompositeInputAccess().getExpresionEntityTokenParserRuleCall_3_0_1());
					}
					lv_expresion_3_2=ruleEntityToken
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositeInputRule());
						}
						add(
							$current,
							"expresion",
							lv_expresion_3_2,
							"org.xtext.botGenerator.Bot.EntityToken");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
	)
;

// Entry rule entryRuleSimpleInput
entryRuleSimpleInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleInputRule()); }
	iv_ruleSimpleInput=ruleSimpleInput
	{ $current=$iv_ruleSimpleInput.current; }
	EOF;

// Rule SimpleInput
ruleSimpleInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimpleInputAccess().getSimpleInputAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleInputAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleInputRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='synonyms'
			{
				newLeafNode(otherlv_2, grammarAccess.getSimpleInputAccess().getSynonymsKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleInputAccess().getValuesEStringParserRuleCall_2_1_0());
					}
					lv_values_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleInputRule());
						}
						add(
							$current,
							"values",
							lv_values_3_0,
							"org.xtext.botGenerator.Bot.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getSimpleInputAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimpleInputAccess().getValuesEStringParserRuleCall_2_2_1_0());
						}
						lv_values_5_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimpleInputRule());
							}
							add(
								$current,
								"values",
								lv_values_5_0,
								"org.xtext.botGenerator.Bot.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleText
entryRuleText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	iv_ruleText=ruleText
	{ $current=$iv_ruleText.current; }
	EOF;

// Rule Text
ruleText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='text'
		{
			newLeafNode(otherlv_0, grammarAccess.getTextAccess().getTextKeyword_0());
		}
		otherlv_1='response'
		{
			newLeafNode(otherlv_1, grammarAccess.getTextAccess().getResponseKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTextAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getTextAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTextAccess().getInputsTextLanguageInputParserRuleCall_4_0());
				}
				lv_inputs_4_0=ruleTextLanguageInput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextRule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_4_0,
						"org.xtext.botGenerator.Bot.TextLanguageInput");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleTextLanguageInput
entryRuleTextLanguageInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextLanguageInputRule()); }
	iv_ruleTextLanguageInput=ruleTextLanguageInput
	{ $current=$iv_ruleTextLanguageInput.current; }
	EOF;

// Rule TextLanguageInput
ruleTextLanguageInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='inputs'
			{
				newLeafNode(otherlv_0, grammarAccess.getTextLanguageInputAccess().getInputsKeyword_0_0());
			}
			(
				otherlv_1='in'
				{
					newLeafNode(otherlv_1, grammarAccess.getTextLanguageInputAccess().getInKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTextLanguageInputAccess().getLanguageLanguageEnumRuleCall_0_1_1_0());
						}
						lv_language_2_0=ruleLanguage
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTextLanguageInputRule());
							}
							set(
								$current,
								"language",
								lv_language_2_0,
								"org.xtext.botGenerator.Bot.Language");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)?
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getTextLanguageInputAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTextLanguageInputAccess().getInputsTextInputTextParserRuleCall_2_0());
				}
				lv_inputs_4_0=ruleTextInputText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextLanguageInputRule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_4_0,
						"org.xtext.botGenerator.Bot.TextInputText");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getTextLanguageInputAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTextLanguageInputAccess().getInputsTextInputTextParserRuleCall_3_1_0());
					}
					lv_inputs_6_0=ruleTextInputText
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTextLanguageInputRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_6_0,
							"org.xtext.botGenerator.Bot.TextInputText");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getTextLanguageInputAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleHTTPResponse
entryRuleHTTPResponse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHTTPResponseRule()); }
	iv_ruleHTTPResponse=ruleHTTPResponse
	{ $current=$iv_ruleHTTPResponse.current; }
	EOF;

// Rule HTTPResponse
ruleHTTPResponse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Response'
		{
			newLeafNode(otherlv_0, grammarAccess.getHTTPResponseAccess().getResponseKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHTTPResponseAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHTTPResponseRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getHTTPResponseAccess().getColonKeyword_2());
		}
		otherlv_3='Request'
		{
			newLeafNode(otherlv_3, grammarAccess.getHTTPResponseAccess().getRequestKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getHTTPResponseAccess().getColonKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHTTPResponseRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getHTTPResponseAccess().getHTTPRequestHTTPRequestCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getHTTPResponseAccess().getSemicolonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHTTPResponseAccess().getInputsTextLanguageInputHttpResponseParserRuleCall_7_0());
				}
				lv_inputs_7_0=ruleTextLanguageInputHttpResponse
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHTTPResponseRule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_7_0,
						"org.xtext.botGenerator.Bot.TextLanguageInputHttpResponse");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleHTTPRequest
entryRuleHTTPRequest returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHTTPRequestRule()); }
	iv_ruleHTTPRequest=ruleHTTPRequest
	{ $current=$iv_ruleHTTPRequest.current; }
	EOF;

// Rule HTTPRequest
ruleHTTPRequest returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Request'
		{
			newLeafNode(otherlv_0, grammarAccess.getHTTPRequestAccess().getRequestKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHTTPRequestAccess().getMethodMethodEnumRuleCall_1_0());
				}
				lv_method_1_0=ruleMethod
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHTTPRequestRule());
					}
					set(
						$current,
						"method",
						lv_method_1_0,
						"org.xtext.botGenerator.Bot.Method");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getHTTPRequestAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHTTPRequestRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getHTTPRequestAccess().getColonKeyword_3());
		}
		otherlv_4='URL'
		{
			newLeafNode(otherlv_4, grammarAccess.getHTTPRequestAccess().getURLKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getHTTPRequestAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHTTPRequestAccess().getURLEStringParserRuleCall_6_0());
				}
				lv_URL_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHTTPRequestRule());
					}
					set(
						$current,
						"URL",
						lv_URL_6_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getHTTPRequestAccess().getSemicolonKeyword_7());
		}
		(
			otherlv_8='basicAuth'
			{
				newLeafNode(otherlv_8, grammarAccess.getHTTPRequestAccess().getBasicAuthKeyword_8_0());
			}
			otherlv_9=':'
			{
				newLeafNode(otherlv_9, grammarAccess.getHTTPRequestAccess().getColonKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHTTPRequestAccess().getBasicAuthKeyValueParserRuleCall_8_2_0());
					}
					lv_basicAuth_10_0=ruleKeyValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHTTPRequestRule());
						}
						set(
							$current,
							"basicAuth",
							lv_basicAuth_10_0,
							"org.xtext.botGenerator.Bot.KeyValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11=';'
			{
				newLeafNode(otherlv_11, grammarAccess.getHTTPRequestAccess().getSemicolonKeyword_8_3());
			}
		)?
		(
			otherlv_12='headers'
			{
				newLeafNode(otherlv_12, grammarAccess.getHTTPRequestAccess().getHeadersKeyword_9_0());
			}
			otherlv_13=':'
			{
				newLeafNode(otherlv_13, grammarAccess.getHTTPRequestAccess().getColonKeyword_9_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHTTPRequestAccess().getHeadersKeyValueParserRuleCall_9_2_0());
					}
					lv_headers_14_0=ruleKeyValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHTTPRequestRule());
						}
						add(
							$current,
							"headers",
							lv_headers_14_0,
							"org.xtext.botGenerator.Bot.KeyValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_15=','
				{
					newLeafNode(otherlv_15, grammarAccess.getHTTPRequestAccess().getCommaKeyword_9_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getHTTPRequestAccess().getHeadersKeyValueParserRuleCall_9_3_1_0());
						}
						lv_headers_16_0=ruleKeyValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getHTTPRequestRule());
							}
							add(
								$current,
								"headers",
								lv_headers_16_0,
								"org.xtext.botGenerator.Bot.KeyValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_17=';'
			{
				newLeafNode(otherlv_17, grammarAccess.getHTTPRequestAccess().getSemicolonKeyword_9_4());
			}
		)?
		(
			otherlv_18='data'
			{
				newLeafNode(otherlv_18, grammarAccess.getHTTPRequestAccess().getDataKeyword_10_0());
			}
			otherlv_19=':'
			{
				newLeafNode(otherlv_19, grammarAccess.getHTTPRequestAccess().getColonKeyword_10_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHTTPRequestAccess().getDataDataParserRuleCall_10_2_0());
					}
					lv_data_20_0=ruleData
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHTTPRequestRule());
						}
						add(
							$current,
							"data",
							lv_data_20_0,
							"org.xtext.botGenerator.Bot.Data");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_21=','
				{
					newLeafNode(otherlv_21, grammarAccess.getHTTPRequestAccess().getCommaKeyword_10_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getHTTPRequestAccess().getDataDataParserRuleCall_10_3_1_0());
						}
						lv_data_22_0=ruleData
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getHTTPRequestRule());
							}
							add(
								$current,
								"data",
								lv_data_22_0,
								"org.xtext.botGenerator.Bot.Data");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_23=';'
			{
				newLeafNode(otherlv_23, grammarAccess.getHTTPRequestAccess().getSemicolonKeyword_10_4());
			}
			otherlv_24='dataType'
			{
				newLeafNode(otherlv_24, grammarAccess.getHTTPRequestAccess().getDataTypeKeyword_10_5());
			}
			otherlv_25=':'
			{
				newLeafNode(otherlv_25, grammarAccess.getHTTPRequestAccess().getColonKeyword_10_6());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHTTPRequestAccess().getDataTypeDataTypeEnumRuleCall_10_7_0());
					}
					lv_dataType_26_0=ruleDataType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHTTPRequestRule());
						}
						set(
							$current,
							"dataType",
							lv_dataType_26_0,
							"org.xtext.botGenerator.Bot.DataType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_27=';'
			{
				newLeafNode(otherlv_27, grammarAccess.getHTTPRequestAccess().getSemicolonKeyword_10_8());
			}
		)?
	)
;

// Entry rule entryRuleImage
entryRuleImage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageRule()); }
	iv_ruleImage=ruleImage
	{ $current=$iv_ruleImage.current; }
	EOF;

// Rule Image
ruleImage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='image'
		{
			newLeafNode(otherlv_0, grammarAccess.getImageAccess().getImageKeyword_0());
		}
		otherlv_1='response'
		{
			newLeafNode(otherlv_1, grammarAccess.getImageAccess().getResponseKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImageAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImageRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getImageAccess().getColonKeyword_3());
		}
		otherlv_4='URL'
		{
			newLeafNode(otherlv_4, grammarAccess.getImageAccess().getURLKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getImageAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImageAccess().getURLEStringParserRuleCall_6_0());
				}
				lv_URL_6_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImageRule());
					}
					set(
						$current,
						"URL",
						lv_URL_6_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7='caption'
			{
				newLeafNode(otherlv_7, grammarAccess.getImageAccess().getCaptionKeyword_7_0());
			}
			otherlv_8=':'
			{
				newLeafNode(otherlv_8, grammarAccess.getImageAccess().getColonKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImageAccess().getCaptionEStringParserRuleCall_7_2_0());
					}
					lv_caption_9_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImageRule());
						}
						set(
							$current,
							"caption",
							lv_caption_9_0,
							"org.xtext.botGenerator.Bot.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleTextLanguageInputHttpResponse
entryRuleTextLanguageInputHttpResponse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextLanguageInputHttpResponseRule()); }
	iv_ruleTextLanguageInputHttpResponse=ruleTextLanguageInputHttpResponse
	{ $current=$iv_ruleTextLanguageInputHttpResponse.current; }
	EOF;

// Rule TextLanguageInputHttpResponse
ruleTextLanguageInputHttpResponse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='inputs'
		{
			newLeafNode(otherlv_0, grammarAccess.getTextLanguageInputHttpResponseAccess().getInputsKeyword_0());
		}
		(
			otherlv_1='in'
			{
				newLeafNode(otherlv_1, grammarAccess.getTextLanguageInputHttpResponseAccess().getInKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTextLanguageInputHttpResponseAccess().getLanguageLanguageEnumRuleCall_1_1_0());
					}
					lv_language_2_0=ruleLanguage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTextLanguageInputHttpResponseRule());
						}
						set(
							$current,
							"language",
							lv_language_2_0,
							"org.xtext.botGenerator.Bot.Language");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getTextLanguageInputHttpResponseAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTextLanguageInputHttpResponseAccess().getInputsTextInputHttpResponseParserRuleCall_3_0());
				}
				lv_inputs_4_0=ruleTextInputHttpResponse
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextLanguageInputHttpResponseRule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_4_0,
						"org.xtext.botGenerator.Bot.TextInputHttpResponse");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getTextLanguageInputHttpResponseAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTextLanguageInputHttpResponseAccess().getInputsTextInputHttpResponseParserRuleCall_4_1_0());
					}
					lv_inputs_6_0=ruleTextInputHttpResponse
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTextLanguageInputHttpResponseRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_6_0,
							"org.xtext.botGenerator.Bot.TextInputHttpResponse");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getTextLanguageInputHttpResponseAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleTextInputHttpResponse
entryRuleTextInputHttpResponse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextInputHttpResponseRule()); }
	iv_ruleTextInputHttpResponse=ruleTextInputHttpResponse
	{ $current=$iv_ruleTextInputHttpResponse.current; }
	EOF;

// Rule TextInputHttpResponse
ruleTextInputHttpResponse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTextInputHttpResponseAccess().getTokensLiteralParserRuleCall_0_0());
				}
				lv_tokens_0_1=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextInputHttpResponseRule());
					}
					add(
						$current,
						"tokens",
						lv_tokens_0_1,
						"org.xtext.botGenerator.Bot.Literal");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getTextInputHttpResponseAccess().getTokensParameterTokenParserRuleCall_0_1());
				}
				lv_tokens_0_2=ruleParameterToken
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextInputHttpResponseRule());
					}
					add(
						$current,
						"tokens",
						lv_tokens_0_2,
						"org.xtext.botGenerator.Bot.ParameterToken");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getTextInputHttpResponseAccess().getTokensHTTPRequestTokenParserRuleCall_0_2());
				}
				lv_tokens_0_3=ruleHTTPRequestToken
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextInputHttpResponseRule());
					}
					add(
						$current,
						"tokens",
						lv_tokens_0_3,
						"org.xtext.botGenerator.Bot.HTTPRequestToken");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)+
;

// Entry rule entryRuleTextInputText
entryRuleTextInputText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextInputTextRule()); }
	iv_ruleTextInputText=ruleTextInputText
	{ $current=$iv_ruleTextInputText.current; }
	EOF;

// Rule TextInputText
ruleTextInputText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTextInputTextAccess().getTokensLiteralParserRuleCall_0_0());
				}
				lv_tokens_0_1=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextInputTextRule());
					}
					add(
						$current,
						"tokens",
						lv_tokens_0_1,
						"org.xtext.botGenerator.Bot.Literal");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getTextInputTextAccess().getTokensParameterTokenParserRuleCall_0_1());
				}
				lv_tokens_0_2=ruleParameterToken
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextInputTextRule());
					}
					add(
						$current,
						"tokens",
						lv_tokens_0_2,
						"org.xtext.botGenerator.Bot.ParameterToken");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)+
;

// Entry rule entryRuleKeyValue
entryRuleKeyValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyValueRule()); }
	iv_ruleKeyValue=ruleKeyValue
	{ $current=$iv_ruleKeyValue.current; }
	EOF;

// Rule KeyValue
ruleKeyValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyValueAccess().getKeyEStringParserRuleCall_0_0());
				}
				lv_key_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyValueRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getKeyValueAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyValueAccess().getValueLiteralParserRuleCall_2_0());
				}
				lv_value_2_0=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyValueRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.botGenerator.Bot.Literal");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleData
entryRuleData returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataRule()); }
	iv_ruleData=ruleData
	{ $current=$iv_ruleData.current; }
	EOF;

// Rule Data
ruleData returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDataAccess().getKeyEStringParserRuleCall_0_0());
				}
				lv_key_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"org.xtext.botGenerator.Bot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDataAccess().getColonKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataAccess().getValueLiteralParserRuleCall_2_0_0());
					}
					lv_value_2_1=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataRule());
						}
						set(
							$current,
							"value",
							lv_value_2_1,
							"org.xtext.botGenerator.Bot.Literal");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getDataAccess().getValueParameterTokenParserRuleCall_2_0_1());
					}
					lv_value_2_2=ruleParameterToken
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataRule());
						}
						set(
							$current,
							"value",
							lv_value_2_2,
							"org.xtext.botGenerator.Bot.ParameterToken");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Rule DefaultEntity
ruleDefaultEntity returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='text'
			{
				$current = grammarAccess.getDefaultEntityAccess().getTEXTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDefaultEntityAccess().getTEXTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='number'
			{
				$current = grammarAccess.getDefaultEntityAccess().getNUMBEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDefaultEntityAccess().getNUMBEREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='date'
			{
				$current = grammarAccess.getDefaultEntityAccess().getDATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDefaultEntityAccess().getDATEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='float'
			{
				$current = grammarAccess.getDefaultEntityAccess().getFLOATEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDefaultEntityAccess().getFLOATEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='time'
			{
				$current = grammarAccess.getDefaultEntityAccess().getTIMEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getDefaultEntityAccess().getTIMEEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule HTTPReturnType
ruleHTTPReturnType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='text'
			{
				$current = grammarAccess.getHTTPReturnTypeAccess().getTEXTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getHTTPReturnTypeAccess().getTEXTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='status_code'
			{
				$current = grammarAccess.getHTTPReturnTypeAccess().getSTATUS_CODEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getHTTPReturnTypeAccess().getSTATUS_CODEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='image'
			{
				$current = grammarAccess.getHTTPReturnTypeAccess().getIMAGEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getHTTPReturnTypeAccess().getIMAGEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='data'
			{
				$current = grammarAccess.getHTTPReturnTypeAccess().getDATAEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getHTTPReturnTypeAccess().getDATAEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule Language
ruleLanguage returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='en'
			{
				$current = grammarAccess.getLanguageAccess().getENGLISHEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLanguageAccess().getENGLISHEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='es'
			{
				$current = grammarAccess.getLanguageAccess().getSPANISHEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLanguageAccess().getSPANISHEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='da'
			{
				$current = grammarAccess.getLanguageAccess().getDANISHEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getLanguageAccess().getDANISHEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='de'
			{
				$current = grammarAccess.getLanguageAccess().getGERMANEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getLanguageAccess().getGERMANEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='fr'
			{
				$current = grammarAccess.getLanguageAccess().getFRENCHEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getLanguageAccess().getFRENCHEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='hi'
			{
				$current = grammarAccess.getLanguageAccess().getHINDIEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getLanguageAccess().getHINDIEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='id'
			{
				$current = grammarAccess.getLanguageAccess().getINDONESIANEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getLanguageAccess().getINDONESIANEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='it'
			{
				$current = grammarAccess.getLanguageAccess().getITALIANEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getLanguageAccess().getITALIANEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='ja'
			{
				$current = grammarAccess.getLanguageAccess().getJAPANESEEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getLanguageAccess().getJAPANESEEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='ko'
			{
				$current = grammarAccess.getLanguageAccess().getKOREANEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getLanguageAccess().getKOREANEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='nl'
			{
				$current = grammarAccess.getLanguageAccess().getDUTCHEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getLanguageAccess().getDUTCHEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='no'
			{
				$current = grammarAccess.getLanguageAccess().getNORWEGIANEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getLanguageAccess().getNORWEGIANEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='pl'
			{
				$current = grammarAccess.getLanguageAccess().getPOLISHEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getLanguageAccess().getPOLISHEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='pt'
			{
				$current = grammarAccess.getLanguageAccess().getPORTUGUESEEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getLanguageAccess().getPORTUGUESEEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='ru'
			{
				$current = grammarAccess.getLanguageAccess().getRUSIANEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getLanguageAccess().getRUSIANEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15='sv'
			{
				$current = grammarAccess.getLanguageAccess().getSWEDISHEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getLanguageAccess().getSWEDISHEnumLiteralDeclaration_15());
			}
		)
		    |
		(
			enumLiteral_16='th'
			{
				$current = grammarAccess.getLanguageAccess().getTHAIEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_16, grammarAccess.getLanguageAccess().getTHAIEnumLiteralDeclaration_16());
			}
		)
		    |
		(
			enumLiteral_17='tr'
			{
				$current = grammarAccess.getLanguageAccess().getTURKISHEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_17, grammarAccess.getLanguageAccess().getTURKISHEnumLiteralDeclaration_17());
			}
		)
		    |
		(
			enumLiteral_18='uk'
			{
				$current = grammarAccess.getLanguageAccess().getUKRANIANEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_18, grammarAccess.getLanguageAccess().getUKRANIANEnumLiteralDeclaration_18());
			}
		)
		    |
		(
			enumLiteral_19='zh'
			{
				$current = grammarAccess.getLanguageAccess().getCHINESEEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_19, grammarAccess.getLanguageAccess().getCHINESEEnumLiteralDeclaration_19());
			}
		)
		    |
		(
			enumLiteral_20='ar'
			{
				$current = grammarAccess.getLanguageAccess().getARABICEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_20, grammarAccess.getLanguageAccess().getARABICEnumLiteralDeclaration_20());
			}
		)
		    |
		(
			enumLiteral_21='cz'
			{
				$current = grammarAccess.getLanguageAccess().getCZECHEnumLiteralDeclaration_21().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_21, grammarAccess.getLanguageAccess().getCZECHEnumLiteralDeclaration_21());
			}
		)
		    |
		(
			enumLiteral_22='bu'
			{
				$current = grammarAccess.getLanguageAccess().getBULGARIANEnumLiteralDeclaration_22().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_22, grammarAccess.getLanguageAccess().getBULGARIANEnumLiteralDeclaration_22());
			}
		)
		    |
		(
			enumLiteral_23='fi'
			{
				$current = grammarAccess.getLanguageAccess().getFINISHEnumLiteralDeclaration_23().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_23, grammarAccess.getLanguageAccess().getFINISHEnumLiteralDeclaration_23());
			}
		)
		    |
		(
			enumLiteral_24='gr'
			{
				$current = grammarAccess.getLanguageAccess().getGREEKEnumLiteralDeclaration_24().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_24, grammarAccess.getLanguageAccess().getGREEKEnumLiteralDeclaration_24());
			}
		)
		    |
		(
			enumLiteral_25='ba'
			{
				$current = grammarAccess.getLanguageAccess().getBANGLAEnumLiteralDeclaration_25().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_25, grammarAccess.getLanguageAccess().getBANGLAEnumLiteralDeclaration_25());
			}
		)
	)
;

// Rule DataType
ruleDataType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='JSON'
			{
				$current = grammarAccess.getDataTypeAccess().getJSONEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataTypeAccess().getJSONEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='FORM'
			{
				$current = grammarAccess.getDataTypeAccess().getFORMEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataTypeAccess().getFORMEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule Method
ruleMethod returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='post'
			{
				$current = grammarAccess.getMethodAccess().getPOSTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMethodAccess().getPOSTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='get'
			{
				$current = grammarAccess.getMethodAccess().getGETEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMethodAccess().getGETEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
